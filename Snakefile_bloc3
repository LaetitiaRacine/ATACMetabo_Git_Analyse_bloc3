from snakemake.io import expand
from collections import defaultdict
from functools import partial

SAMPLE = defaultdict(dict)

import csv
with open('differential_analysis_choice.csv', mode='r') as file:
	reader = csv.reader(file, delimiter=',')
	next(reader, None)  # skip the headers
	for row in reader:
		included, differential, analysis = row
		if included == "false":
			continue
		SAMPLE[analysis][differential] = differential

def list_diff_time() :
	result = []
	for analysis, differential in SAMPLE.items() :
		for differential, file in differential.items():
			if analysis == "diff_time" :
				result.append(differential)
	return result

def list_diff_cond() :
	result = []
	for analysis, differential in SAMPLE.items() :
		for differential, file in differential.items():
			if analysis == "diff_cond" :
				result.append(differential)
	return result

print(list_diff_time())
print(list_diff_cond())

rule all :
	input :
		"D_Analysis/ATAC_nbpeak_annotation/plot_nbpeaks_pertime.png",
		"D_Analysis/ATAC_nbpeak_annotation/plot_nbpeaks_percond.png",
		"D_Analysis/ATAC_nbpeak_annotation/plot_nbpeaks_annotation_pertime.png",
		"D_Analysis/ATAC_nbpeak_annotation/plot_nbpeaks_annotation_percond.png",
		"D_Analysis/ATAC_nbpeak_annotation/nbpeaks_per_annot_report.csv",
		"D_Analysis/ATAC_nbpeak_annotation/nbpeaks_per_annot_long_report.csv",
		expand("D_Analysis/ATAC_differential_accessibility/{comparison}_threshold_10_ann.gr.rds", comparison = list_comp_time()),
		expand("D_Analysis/ATAC_differential_accessibility/{comparison}_threshold_10_ann.gr.rds", comparison = list_comp_cond()),
		expand("D_Analysis/ATAC_differential_accessibility/readcount_{comparison}.rds", comparison = list_comp_time()),
		expand("D_Analysis/ATAC_differential_accessibility/readcount_{comparison}.rds", comparison = list_comp_cond()),
		expand("D_Analysis/ATAC_differential_accessibility/featurecounts_{comparison}.txt", comparison = list_comp_time()),
		expand("D_Analysis/ATAC_differential_accessibility/featurecounts_{comparison}.txt", comparison = list_comp_cond())

#*******************************************************************************************************************************************************
#*** Bloc 3 : Crossed study of samples
#*******************************************************************************************************************************************************

#################################################
### Experiment : ATAC_peaks_annotation
#################################################

rule plot_nbpeaks_annotation :
	output :
			plot1 = "D_Analysis/ATAC_nbpeak_annotation/plot_nbpeaks_pertime.png",
			plot2 = "D_Analysis/ATAC_nbpeak_annotation/plot_nbpeaks_percond.png",
			plot3 = "D_Analysis/ATAC_differential_accessibilitypeak_annotation/plot_nbpeaks_annotation_pertime.png",
			plot4 = "D_Analysis/ATAC_nbpeak_annotation/plot_nbpeaks_annotation_percond.png",
			tab_annot = "D_Analysis/ATAC_nbpeak_annotation/nbpeaks_per_annot_report.csv",
			tab_annot_long = "D_Analysis/ATAC_nbpeak_annotation/nbpeaks_per_annot_long_report.csv"
	params :
			gr_directory = "A_Initial_data/merged_analysis/genomic_ranges/"
	conda : "B_Environments/ATACMetabo_main_env.locked.yaml"
	shell : """ Rscript C_Scripts/ATAC_plot_peaks_annotation.R {params.gr_directory} {output.plot1} {output.plot2} {output.plot3} {output.plot4} {output.tab_annot} {output.tab_annot_long} """


##############################################################################################
### Experiment : ATAC_differential_accessibility
##############################################################################################

rule differential_peaks_union :
	input:
		"A_Initial_data/merged_analysis/genomic_ranges/{condition1}_{time1}_{donors1}_threshold_10_ann.gr.rds",
		"A_Initial_data/merged_analysis/genomic_ranges/{condition2}_{time2}_{donors2}_threshold_10_ann.gr.rds"
	output: "D_Analysis/ATAC_differential_accessibility/{condition2}_{time2}_{donors2}_vs_{condition1}_{time1}_{donors1}_threshold_10_ann.gr.rds"
	conda : "B_Environments/ATACMetabo_main_env.locked.yaml"
	shell : """ Rscript C_Scripts/GRanges.R union -o {output} {input} """

rule differential_peaks_featureCounts :
	input :
		bam1 = "A_Initial_data/merged_analysis/downsampled_bam/{condition1}_{time1}_{donors1}_downsampled.bam",
		bam2 = "A_Initial_data/merged_analysis/downsampled_bam/{condition2}_{time2}_{donors2}_downsampled.bam",
		union = "D_Analysis/ATAC_differential_accessibility/{condition2}_{time2}_{donors2}_vs_{condition1}_{time1}_{donors1}_threshold_10_ann.gr.rds"
	output :
		readcount = "D_Analysis/ATAC_differential_accessibility/readcount_{condition2}_{time2}_{donors2}_vs_{condition1}_{time1}_{donors1}.rds",
		featurecounts = "D_Analysis/ATAC_differential_accessibility/featurecounts_{condition2}_{time2}_{donors2}_vs_{condition1}_{time1}_{donors1}.txt"
	conda : "B_Environments/ATACMetabo_main_env.locked.yaml"
	shell : """ Rscript C_Scripts/peaks_union_featureCounts.R --output_rds {output.readcount} --output_txt {output.featurecounts} {input.union} {input.bam1} {input.bam2} """


# rule DEseq_Differential_Peaks_Union :
# 	input : rules.ReadCount_Static_Peaks_Intersection.output
# 	output : expand("results/readCount_output/readCount_{differential}.rda", differential = DIFFERENTIAL),
# 	         expand("results/DEseq_output/DEseq2_results_{differential}.txt", differential = DIFFERENTIAL),
# 	         expand("results/genomic_ranges/differential_peaks/peaks_{modulation}_{differential}_gr.rda", modulation = MODULATION, differential = DIFFERENTIAL),
# 	         expand("results/readCount_output/featuresCount_{differential}.txt", differential = DIFFERENTIAL)
# 	conda : "B_Environments/DEseq2_env.yaml"
# 	shell : """ Rscript C_Scripts/02_DEseq_Differential_Peaks_Union.R """
#
#
#
# rule Plot_volcano :
#   input : rules.Annotate_grange.output
#   output : expand("results/plot/volcano_{differential}.png", differential = DIFFERENTIAL),
#            expand("results/plot/volcano_TSS_Intergenic_{differential}.png", differential = DIFFERENTIAL)
#   conda : "B_Environments/volcano_env.yaml"
#   shell : """ Rscript C_Scripts/05_Plot_volcano.R """




#################################################
### Experiment : ATAC
#################################################

# # répartition des peaks sur les chromosomes
#
#
#
#
#  # séparation de la conversion en bed et de la rule homer
# rule Convert_csvtobed :
#   input : "{file}_ann.csv"
#   output : "{file}_ann.bed"
#   conda : "B_Environments/ATACMetabo_main_env.locked.yaml"
#   shell : """ sed 's/\"//g' {input} | sed 1d | cut -f 2-4 -d ';' --output-delimiter=$'\t' > {output} """
#
# rule Homer_motif :
#   input : input1 = rules.Convert_to_bed.output,
#           input2 = "results/genomic_ranges/annotated_bed/peaks_intersection_{variable_part}_ann.bed"
#   output : "results/homer_output/{variable_part}/known_Results.html"
#   conda : "B_Environments/homer_test.yaml" # préciser qu'il faut installer homer et hg19 sur l'ordi
#   params : prefix = "{variable_part}"
#   shell : """ findMotifsGenome.pl {input.input2} hg19 results/homer_output/{params.prefix}/ -size given -S 100 """
# # problème avec le hg19 ? l'environnement créé via le yaml pose problème il ne contient pas les fichiers chrosomes
#

#
# rule readcount_matrix :
# 	input :
# 		csv = "D_Analysis/macs2_output/{sample}.df.csv",
# 		bam = "D_Analysis/downsampled_bam/{sample}_downsampled.bam"
# 	output :
# 		readcount = "D_Analysis/macs2_output/{sample}.readcount.csv",
# 		rule_order = touch("D_Analysis/touch/mytask_readcount_{sample}.done")
# 	conda : "B_Environments/ATACMetabo_main_env.locked.yaml"
# 	shell : """ Rscript C_Scripts/peaks_featureCounts.R --output_csv {output.readcount} {input.csv} {input.bam}"""
#
#



# rule DEseq_Differential_Peaks_Union :
# 	input : rules.ReadCount_Static_Peaks_Intersection.output
# 	output : expand("results/readCount_output/readCount_{differential}.rda", differential = DIFFERENTIAL),
# 	         expand("results/DEseq_output/DEseq2_results_{differential}.txt", differential = DIFFERENTIAL),
# 	         expand("results/genomic_ranges/differential_peaks/peaks_{modulation}_{differential}_gr.rda", modulation = MODULATION, differential = DIFFERENTIAL),
# 	         expand("results/readCount_output/featuresCount_{differential}.txt", differential = DIFFERENTIAL)
# 	conda : "B_Environments/DEseq2_env.yaml"
# 	shell : """ Rscript C_Scripts/02_DEseq_Differential_Peaks_Union.R """
#
# rule Gene_coverage :
# 	  input : rules.DEseq_Differential_Peaks_Union.output
# 	  output : expand("results/Gene_coverage/{condition}_{region}_Coverage_plot.txt", condition = CONDITION, region = REGION)
# 	  conda : "B_Environments/gviz_env.yaml"
# 	  shell : """ Rscript C_Scripts/06_Gene_coverage.R """
#
#
# rule Plot_volcano :
#   input : rules.Annotate_grange.output
#   output : expand("results/plot/volcano_{differential}.png", differential = DIFFERENTIAL),
#            expand("results/plot/volcano_TSS_Intergenic_{differential}.png", differential = DIFFERENTIAL)
#   conda : "B_Environments/volcano_env.yaml"
#   shell : """ Rscript C_Scripts/05_Plot_volcano.R """
#
#
# rule Gene_Ontology :
# input :
# output :
# conda :
# shell : """ """
