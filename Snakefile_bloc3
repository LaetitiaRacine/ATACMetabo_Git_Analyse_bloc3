from snakemake.io import expand
from collections import defaultdict
from functools import partial

COMPARISON = defaultdict(dict)
SAMPLE = defaultdict(partial(defaultdict, dict))
LIST = "MP_03h_D1-D2-D3_MP_12h_D1-D2-D3"

import csv
with open('comparison_analysis_choice.csv', mode='r') as file:
	reader = csv.reader(file, delimiter=',')
	next(reader, None)  # skip the headers
	for row in reader:
		included, differential, analysis = row
		if included == "false":
			continue
		COMPARISON[analysis][differential] = differential

def list_comp_time() :
	result = []
	for analysis, differential in COMPARISON.items() :
		for differential, file in differential.items():
			if analysis == "comp_time" :
				result.append(differential)
	return result

def list_comp_cond() :
	result = []
	for analysis, differential in COMPARISON.items() :
		for differential, file in differential.items():
			if analysis == "comp_cond" :
				result.append(differential)
	return result

import csv
with open('analysis_choice.csv', mode='r') as file:
	reader = csv.reader(file)
	next(reader, None)
	for row in reader:
		included, condition, time, donor = row
		if included == "false":
			continue
		SAMPLE[condition][time][donor] = "_".join((condition, time, donor))

def list_sample():
	result = []
	for condition, times in SAMPLE.items():
		for time, donors in times.items():
			for donor, file in donors.items():
				result.append("_".join((condition, time, donor)))
	return result

print(list_comp_time())
print(list_comp_cond())
print(list_sample())

rule all :
	input :
		"D_Analysis/ATAC_gene_coverage/GATA2_Coverage_plot.pdf",
		expand("D_Analysis/ATAC_gene_coverage/{sample}_GATA2_Coverage_plot.pdf", sample = list_sample()),
		# expand("D_Analysis/ATAC_gene_coverage/{liste}_GATA2_Coverage_plot.pdf", liste = LIST)

#*******************************************************************************************************************************************************
#*** Bloc 3 : Crossed study of samples
#*******************************************************************************************************************************************************

################################################
## Exp ATAC_gene_coverage
################################################

# pour le moment pas d'input, il faut modifier le script R à la main
rule gene_coverage_region_df :
	output : "D_Analysis/ATAC_gene_coverage/df_region.csv"
	conda : "B_Environments/ATACMetabo_gviz_env.locked.yaml"
	shell : """ Rscript C_Scripts/ATAC_gene_biovizBase.R {output} """


# un output d'indiqué pour pouvoir l'appeler dans le rule all
rule gene_coverage_all_conditions:
	input:
		prom = "A_Initial_data/prom_gene_fantom_gr_corrected.rds",
		region = "D_Analysis/ATAC_gene_coverage/df_region.csv"
	output: "D_Analysis/ATAC_gene_coverage/GATA2_Coverage_plot.pdf"
	params :
		bam_dir = "A_Initial_data/merged_analysis/bam",
		gr_dir = "A_Initial_data/merged_analysis/genomic_ranges"
	conda : "B_Environments/ATACMetabo_gviz_env.locked.yaml"
	shell : """ Rscript C_Scripts/ATAC_gene_coverage.R multi {input.prom} {input.region} {params.bam_dir} {params.gr_dir} """

# un output d'indiqué pour pouvoir l'appeler dans le rule all
# rule gene_coverage_multiple_conditions:
# 	input:
# 		prom = "A_Initial_data/prom_gene_fantom_gr_corrected.rds",
# 		rds = expand("A_Initial_data/merged_analysis/genomic_ranges/{liste}_threshold_10_ann.gr.rds", liste = LIST)
# 	output: "D_Analysis/ATAC_gene_coverage/{name1}_{namex}_GATA2_Coverage_plot.pdf"
# 	params :
# 		bam_dir = "A_Initial_data/merged_analysis/bam",
# 		gr_dir = "A_Initial_data/merged_analysis/genomic_ranges"
# 	conda : "B_Environments/ATACMetabo_main_env.locked.yaml"
# 	shell : """ Rscript C_Scripts/ATAC_gene_coverage.R multi_choice {input.prom} {params.bam_dir} {params.gr_dir} {output.plot} """


# un output d'indiqué pour piouvoir l'appeler dans le rule all
rule gene_coverage_one_condition:
	input:
		prom = "A_Initial_data/prom_gene_fantom_gr_corrected.rds",
		region = "D_Analysis/ATAC_gene_coverage/df_region.csv",
		rds = "A_Initial_data/merged_analysis/genomic_ranges/{sample}_threshold_10_ann.gr.rds"
	output: "D_Analysis/ATAC_gene_coverage/{sample}_GATA2_Coverage_plot.pdf"
	params :
		bam_dir = "A_Initial_data/merged_analysis/bam"
	conda : "B_Environments/ATACMetabo_gviz_env.locked.yaml"
	shell : """ Rscript C_Scripts/ATAC_gene_coverage.R single {input.prom} {input.region} {params.bam_dir} {input.rds} """
