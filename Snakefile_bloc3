from snakemake.io import expand
from collections import defaultdict
from functools import partial

SAMPLE = defaultdict(dict)

import csv
with open('comparison_analysis_choice.csv', mode='r') as file:
	reader = csv.reader(file, delimiter=',')
	next(reader, None)  # skip the headers
	for row in reader:
		included, comparison, analysis = row
		if included == "false":
			continue
		SAMPLE[analysis][comparison] = comparison

def list_comp_time() :
	result = []
	for analysis, comparison in SAMPLE.items() :
		for comparison, file in comparison.items():
			if analysis == "comp_time" :
				result.append(comparison)
	return result

def list_comp_cond() :
	result = []
	for analysis, comparison in SAMPLE.items() :
		for comparison, file in comparison.items():
			if analysis == "comp_cond" :
				result.append(comparison)
	return result

print(list_comp_time())
print(list_comp_cond())


rule all :
	input :
		# expand("D_Analysis/ATAC_differential_accessibility/{comparison}_threshold_10_ann.gr.rds", comparison = list_comp_time()),
		# expand("D_Analysis/ATAC_differential_accessibility/{comparison}_threshold_10_ann.gr.rds", comparison = list_comp_cond()),
		# expand("D_Analysis/ATAC_differential_accessibility/readcount_{comparison}.rds", comparison = list_comp_time()),
		# expand("D_Analysis/ATAC_differential_accessibility/readcount_{comparison}.rds", comparison = list_comp_cond()),
		# expand("D_Analysis/ATAC_differential_accessibility/featurecounts_{comparison}.txt", comparison = list_comp_time()),
		# expand("D_Analysis/ATAC_differential_accessibility/featurecounts_{comparison}.txt", comparison = list_comp_cond()),
        # expand("D_Analysis/ATAC_differential_accessibility/readcount_{comparison}.csv", comparison = list_comp_time()),
		# expand("D_Analysis/ATAC_differential_accessibility/readcount_{comparison}.csv", comparison = list_comp_cond()),
		expand("D_Analysis/ATAC_differential_accessibility/volcano_prom_intergenic_{comparison}.png", comparison = list_comp_cond()),
		expand("D_Analysis/ATAC_differential_accessibility/volcano_prom_intergenic_{comparison}.png", comparison = list_comp_time())



##############################################################################################
### Experiment : ATAC_differential_accessibility
##############################################################################################

rule differential_gr_union :
	input:
		"A_Initial_data/merged_analysis/genomic_ranges/{condition1}_{time1}_{donors1}_threshold_10_ann.gr.rds",
		"A_Initial_data/merged_analysis/genomic_ranges/{condition2}_{time2}_{donors2}_threshold_10_ann.gr.rds"
	output: "D_Analysis/ATAC_differential_accessibility/{condition2}_{time2}_{donors2}_vs_{condition1}_{time1}_{donors1}_threshold_10.gr.rds"
	conda : "B_Environments/ATACMetabo_main_env.locked.yaml"
	shell : """ Rscript C_Scripts/GRanges.R union -o {output} {input} """

rule differential_gr_annotation :
	input:
		annotations = "A_Initial_data/Annotation_TSS_pm1kb_int_ex_53utr_ctcf_cpg_woThisto_FANTOM5_prom_gr.rda",
		grange = "D_Analysis/ATAC_differential_accessibility/{condition2}_{time2}_{donors2}_vs_{condition1}_{time1}_{donors1}_threshold_10.gr.rds"
	output: "D_Analysis/ATAC_differential_accessibility/{condition2}_{time2}_{donors2}_vs_{condition1}_{time1}_{donors1}_threshold_10_ann.gr.rds"
	conda : "B_Environments/ATACMetabo_main_env.locked.yaml"
	shell : """ Rscript C_Scripts/annotate_grange.R -a {input.annotations} {input.grange} {output} """

rule differential_featureCounts :
	input : "D_Analysis/ATAC_differential_accessibility/{condition2}_{time2}_{donors2}_vs_{condition1}_{time1}_{donors1}_threshold_10_ann.gr.rds"
	output :
		readcount_csv = "D_Analysis/ATAC_differential_accessibility/readcount_{condition2}_{time2}_{donors2}_vs_{condition1}_{time1}_{donors1}.csv",
		matrixcount = "D_Analysis/ATAC_differential_accessibility/matrixcount_{condition2}_{time2}_{donors2}_vs_{condition1}_{time1}_{donors1}.txt",
		peakstype = "D_Analysis/ATAC_differential_accessibility/peaktype_{condition2}_{time2}_{donors2}_vs_{condition1}_{time1}_{donors1}.csv"
	params :
		bam_dir = "A_Initial_data/merged_analysis/bam",
		gr_dir = "A_Initial_data/merged_analysis/genomic_ranges"
	conda : "B_Environments/ATACMetabo_main_env.locked.yaml"
	shell : """ Rscript C_Scripts/ATAC_differential_accessibility_DEseq.R create_readcountmatrix \\
					--output_txt {output.matrixcount} \\
					--output_peakstype {output.peakstype} \\
					{params.bam_dir} {params.gr_dir} {input} {output.readcount_csv} """

rule differential_DEseq :
	input :
		readcount = "D_Analysis/ATAC_differential_accessibility/readcount_{condition2}_{time2}_{donors2}_vs_{condition1}_{time1}_{donors1}.csv",
		gr_annot = "D_Analysis/ATAC_differential_accessibility/{condition2}_{time2}_{donors2}_vs_{condition1}_{time1}_{donors1}_threshold_10_ann.gr.rds"
	output :
		norm_matrix = "D_Analysis/ATAC_differential_accessibility/matrixcount_normalized_{condition2}_{time2}_{donors2}_vs_{condition1}_{time1}_{donors1}.txt",
		deseq_result = "D_Analysis/ATAC_differential_accessibility/Deseq_results_{condition2}_{time2}_{donors2}_vs_{condition1}_{time1}_{donors1}.csv"
	conda : "B_Environments/ATACMetabo_main_env.locked.yaml"
	shell : """ Rscript C_Scripts/ATAC_differential_accessibility_DEseq.R deseq_object \\
	 				{input.readcount} {input.gr_annot} {output.norm_matrix} {output.deseq_result} """

rule differential_volcano :
	input : "D_Analysis/ATAC_differential_accessibility/Deseq_results_{condition2}_{time2}_{donors2}_vs_{condition1}_{time1}_{donors1}.csv"
	output : "D_Analysis/ATAC_differential_accessibility/volcano_prom_intergenic_{condition2}_{time2}_{donors2}_vs_{condition1}_{time1}_{donors1}.png"
	conda : "B_Environments/ATACMetabo_main_env.locked.yaml"
	shell : """ Rscript C_Scripts/ATAC_differential_accessibility_DEseq.R annot_volcano {input} {output} """
